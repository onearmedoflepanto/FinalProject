"""
Django settings for FinScope project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
from decouple import config as default_decouple_config, Config, RepositoryEnv # Import default config too
import os # Import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Explicitly define the .env file path
DOTENV_PATH = BASE_DIR / '.env'

# Create a specific Config instance pointing to the .env file
# This ensures decouple knows exactly where to look.
if os.path.exists(DOTENV_PATH):
    env_config = Config(RepositoryEnv(DOTENV_PATH))
else:
    # Fallback if .env is somehow not found, though it should be.
    # This will likely cause errors if keys are mandatory and not found.
    print(f"WARNING: .env file not found at {DOTENV_PATH}. Using default config which might miss keys.")
    from decouple import config as env_config # Use default config as fallback


SECRET_KEY = env_config("SECRET_KEY")
DEBUG = env_config("DEBUG", default=True, cast=bool)
ALLOWED_HOSTS = env_config("ALLOWED_HOSTS", default="*").split(",")

# FSS API Key
VITE_FSS_API_KEY = env_config('VITE_FSS_API_KEY', default=None) # Reverted to load from .env
# print(f"DEBUG settings.py: VITE_FSS_API_KEY from env_config = '{VITE_FSS_API_KEY}' (Type: {type(VITE_FSS_API_KEY)})") # DEBUG LINE REMOVED

GOOGLE_REDIRECT_URI = "http://localhost:8001/api/accounts/google/callback/"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# moved to .env file

# Application definition

INSTALLED_APPS = [
    # 기본 Django 앱들
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # 외부 앱
    "rest_framework",
    "rest_framework_simplejwt",
    "corsheaders",
    "rest_framework_simplejwt.token_blacklist",
    # 커스텀 앱
    "accounts",
    "boards",
    "stocks",
    "news", # Add the news app
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "FinScope.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

STATIC_URL = "/static/"
STATICFILES_DIRS = [BASE_DIR / "static"]

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

WSGI_APPLICATION = "FinScope.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "BLACKLIST_AFTER_ROTATION": True,
    "ROTATE_REFRESH_TOKENS": True,
}

CORS_ALLOW_ALL_ORIGINS = True

AUTH_USER_MODEL = "accounts.User"

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "ko-kr"

TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

import os
from dotenv import load_dotenv

load_dotenv()

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY")
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.getenv("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET")
LOGIN_REDIRECT_URL = "http://localhost:8001/api/accounts/google/callback/"

# Email Configuration
# For development, emails will be printed to the console.
# For production, replace with your actual email service provider's settings (e.g., SMTP, SendGrid, AWS SES).
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # Console backend commented out

# Gmail SMTP Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = env_config('EMAIL_HOST_USER', default='')  # Your Gmail address from .env
EMAIL_HOST_PASSWORD = env_config('EMAIL_HOST_PASSWORD', default='') # Your Gmail App Password from .env
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER # Set default from email to your Gmail address
